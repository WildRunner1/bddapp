{
    "translation":{
        "menu":{
            "diagrams":"Diagramy",
            "theory":"Teoria",
            "about":"O Aplikacji"
        },
        "diagrams":{
            "function":"Funkcja logiczna",
            "functionType":"Typ Funkcji",
            "change":"Zmień kolejność zmiennych (drag'n'drop)",
            "KPI":"KPI",
            "KPItitle":"Kanoniczna Postać Iloczynu",
            "KPS":"KPS",
            "KPStitle":"Kanoniczna Postać Sumy",
            "generate":"Generuj",
            "truthTable":"Tabela Prawdy"
        },
        "fucntionStorage":{
            "title":"Zapisz/Wczytaj funkcję",
            "saveTitle":"---------- Zapisz ----------",
            "loadTitle":"---------- Wczytaj ----------",
            "save":"Zapis",
            "load":"Wczytaj",
            "delete":"Usuń",
            "function":"Funkcja Logiczna",
            "functionType":"Typ Funkcji",
            "description":"Opis",
            "close":"Zamknij",
            "KPI":"KPI",
            "KPS":"KPS",
            "tip":"Wyświetl zapisane funkcje"
        },
        "statusBar":{
            "statistic":"STATYSTYKI",
            "nonTerminal":"Ilość węzłów nieterminalowych",
            "terminal":"Ilość węzłów terminalowych",
            "allNodes":"Ilość węzłów razem",
            "importantNodes":"Ilość węzłów terminalowych znaczących",
            "edges":"Ilość krawędzi",
            "minKPS":"funkcja uproszczona",
            "minKPI":"funkcja uproszczona"
        },
        "ROBDD":{
            "tautology":"TAUTOLOGIA"
        },
        "instruction":{
            "title":"Instrukcja",
            "line1":"Zmienne:",
            "line2":" A-Z lub a-z",
            "line3":"Negacja:",
            "line4": "/",
            "line5":"Przykładowa funkcja KPS:",
            "line6": "ABC+/ABC+A/BC",
            "line7":"Przykładowa funkcja KPI:", 
            "line8":"(A+B+C)*(/A+B+C)*(A+/B+C)",
            "line9":"*nie wszystkie przypadki złej składni są uwzględnione, dla większej kontroli w konsoli przeglądarki (Ctrl+Shift+I) wyswietlane są zmapowane zmienne i wyrażenia"
        },
        "modals":{
            "stored":"Zapisano",
            "deleted":"Usunięto"
        },
        "about":{
            "title":"GRAFICZNA PREZENTACJA FUNKCJI LOGICZNYCH W FORMIE DIAGRAMÓW BDD",
            "purposeOfWork":"Cel pracy",
            "purposeOfWorkText1":"Projekt i implementacja oprogramowania przeznaczonego do graficznej prezentacji funkcji logicznych w formie diagramów BDD, OBDD i ROBDD.",
            "about":"O aplikacji",
            "aboutText1":"Aplikacja powstała w ramach pracy dyplomowej inżynierskiej na kierunku Informatyka na Wydział Informatyki, Elektrotechniki i Automatyki - Uniwesytet Zielonogórski. Celem aplikacji jest budowa diagramów OBDD i ROBDD na podstwie podanej przez użytkownika funkcji logicznej w postaci KPS lub KPI. Wynikową działania jest również budowa tablicy prawdy w układzie kodu binarnego.",
            "tech":"Technologie / Biblioteki",
            "tools":"Narzędzia",
            "links":"Linki",
            "author":"Autor:",
            "study":"Kierunek studiów:",
            "supervisor":"Promotor:",
            "faculty":"Wydział:",
            "college":"Uczelnia:",
            "collageName":"Uniwersytet Zielonogórski",
            "defense":"Obrona:"


        },
        "teory":{
            "teoryNav1":"Logika",
            "teoryNav2":"Algebra Boole'a",
            "teoryNav3":"KPS i KPI",
            "teoryNav4":"BDD i OBDD",
            "teoryNav5":"ROBDD",
            "teoryNav6":"Rozkład Shanonna",
            "article1Title":"Logika i logika w informatyce",
            "article1_1":"Logika jest dziedziną filozofii, matematyki i nauk formalnych, która zajmuje się badaniem i formalizowaniem myślenia oraz jego struktur. Logika jest narzędziem do analizy i rozumowania, pozwala na formalne opisanie i badanie różnych systemów poznawczych, takich jak języki naturalne, myślenie ludzkie, a także systemów formalnych, takich jak języki programowania czy logika matematyczna.",
            "article1_2":"Głównym celem logiki jest zrozumienie i opisanie reguł i zasad rządzących myśleniem, rozumowaniem i argumentowaniem. Logika pozwala na weryfikację i ocenę poprawności argumentów i twierdzeń.",
            "article1_3":"Logika w informatyce związana jest również z takimi dziedzinami jak teoria formalnych systemów, teoria algorytmów, teoria komunikacji i kryptografia.",
            "article1_4":"Logika znajduje zastosowanie między innymi w:",
            "article1_5":"● Projektowaniu algorytmów",
            "article1_6":"● Tworzeniu systemów formalnych",
            "article1_7":"● Analizie i optymalizacja systemów",
            "article2Title":"Algebra Boole'a",
            "article2_1":"Algebra Boole'a to dziedzina matematyki zajmująca się operacjami na zmiennych logicznych, czyli zmiennych przyjmujących wartości prawda (ang. true) lub fałsz (ang. false). Nazwa pochodzi od imienia matematyka George'a Boole'a, który jako pierwszy opracował system algebraiczny dla operacji logicznych. W Algebrze Boole'a używa się operatorów AND, OR i NOT, które pozwalają na modelowanie różnych sytuacji logicznych.",
            "article2_2":"Algebra Boole'a jest także podstawą logiki matematycznej, gdzie pozwala na formułowanie i rozwiązywanie twierdzeń logicznych. Służy do też do reprezentacji teoretycznej komputera i pozwala na analizę algorytmów za pomocą pojęcia formalnego.",
            "article2_3":"Funkcja logiczna w algebrze Boole'a jest to matematyczna funkcja, która przypisuje każdemu możliwemu ciągowi wartości prawdy lub fałszu dla danych zmiennych logicznych. W algebrze Boole'a, zmienne logiczne mają tylko dwie możliwe wartości: prawda (1) i fałsz (0).",
            "article2_4":" Funkcja logiczna jest reprezentowana przez wielomiany, w których zmienne logiczne są reprezentowane przez zmienne binarne, a operacje logiczne są reprezentowane przez operatory algebraiczne.",
            "article2_5":"W algebrze Boole'a istnieją trzy podstawowe operacje logiczne:",
            "article2_6":"● koniunkcja (˄,AND, &, &&, *) ",
            "article2_7":"● alternatywa (˅,OR, |, ||, +)",
            "article2_8":"● negacja (¬,NOT, !, ‘, /)",
            "article3Title":"",
            "article3":"",
            "article4Title":"",
            "article4":"",
            "article5Title":"",
            "article5":"",
            "article6Title":"",
            "article6":"",
            "teory":"Teoria"
        }
    }
}

